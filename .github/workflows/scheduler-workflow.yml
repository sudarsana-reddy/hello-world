name: Remote Trigger Flow

on: 
  workflow_dispatch:
    inputs:
#       PDM parameters
      DeploymentID:
        description: "Deployment ID of the pipeline on which the task is triggered" 
        required: true      
      DeploymentNumber:
        description: "Sequence number of the deployment."
        required: false
      CallBackURL:
        description: "Pega Callback URL"
        required: true
      TaskID:
        description: "TaskID of the GitHub task"
        required: false       
      OrchestratorURL:
        description: "URL on which the GitHub task is configured"
        required: false
      PipelineName:
        description: "Pipeline name on which the GitHub task is configured"
        required: true        
      PipelineID:
        description: "ID of the pipeline on which the GitHub task is configured"
        required: true       
      CurrentStage:
        description: "Name of the stage on which the GitHub task is configured"
        required: true
      CurrentStageURL:
        description: "URL of the system on which the GitHub task is configured"
        required: false
#       DeploymentArtifactName:
#         description: "Artifact name that the Deploy task uses on the stage on which the GitHub task is configured"
#         required: false
#       ArtifactPath:
#         description: "Full path to the artifact that the Deploy task uses"
#         required: false
#       Workflow parameters
      TEST_SUITE_NAME:
        description: "Automation test suite (testng xml) to be executed"
        required: true

jobs:
  pega-github-custom-task:   
    runs-on: ubuntu-latest
    steps:
    - name: Print all the parameters
      run: |   
        echo "DeploymentID: ${{ inputs.DeploymentID }}"
        echo "DeploymentNumber: ${{ inputs.DeploymentNumber }}"
        echo "CallBackURL: ${{ inputs.CallBackURL }}"        
        echo "TaskID: ${{ inputs.TaskID }}"
        echo "OrchestratorURL: ${{ inputs.OrchestratorURL }}"
        echo "PipelineName: ${{ inputs.PipelineName }}"
        echo "PipelineID: ${{ inputs.PipelineID }}"
        echo "CurrentStage: ${{ inputs.CurrentStage }}"
        echo "CurrentStageURL: ${{ inputs.CurrentStageURL }}"
        echo "DeploymentArtifactName: ${{ inputs.DeploymentArtifactName }}"
        echo "ArtifactPath: ${{ inputs.ArtifactPath }}"
        echo "TEST_SUITE_NAME: ${{ inputs.TEST_SUITE_NAME }}"

    - name: Update Pega DM Task
      run: |  
        CallBackURL=$(echo "${{ inputs.CallBackURL }}" | sed 's/legacy_tasks/tasks/g')
        authResponse=$(curl --location -g --request POST "${{ secrets.SUPUN_PDM_URL }}/prweb/PRRestService/oauth2/v1/token" \
        --header 'Content-Type: application/x-www-form-urlencoded' \
        --data-urlencode 'client_id=${{ secrets.PEGA_DM_CLIENT_ID}}' \
        --data-urlencode 'client_secret=${{ secrets.SUPUN_PDM_CLIENT_SECRET}}' \
        --data-urlencode 'grant_type=client_credentials')

        echo $authResponse
        authToken=$(echo $authResponse | jq .access_token)
        echo $authToken

        updateTaskResponse=$(curl --location --request PUT "$CallBackURL" \
          --header 'Authorization: Bearer $authToken' \
          --header 'Content-Type: application/json' \
          --data-raw '{
            "taskStatus": "Resolved-Completed",           
            "taskInfo": {
                "outputParameters": [
                  {
                    "name": "BuildNumber",
                    "type": "Text",
                    "value": "${{ github.run_number }}"
                  },
                  {
                    "name": "GitHubBuildURL",
                    "type": "Text",
                    "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            }')
          echo "updateTaskResponse: $updateTaskResponse";
